; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Aprog"
#define MyAppVersion "2.03.02"        ;AP9900 版本号        
#define MultiAppVersion "0.0.0"     ;MultiAprog 版本号
#define MyAppPublisher "Build" ;源文件路径
#define MyAppURL "http://www.acroview.com/"
#define MyAppExeName "Aprog.exe"
#define SourceFolder "Build"
#define MultiAppName "MultiAprog"
#define MultiAppExeName "MultiAprog.exe"
#define ResourcePath "resource\*"
#define PicturePath "resource\picture"   ;图片路径
#define OutputDir "output"    ;输出路径
#define DefaultInstallDir "C:\ACROVIEW 2.0"
#define VCDir "Tools" 
#define VCinstallfile_x86 "VC_redist.x86.exe"
#define VCinstallfile_x64 "VC_redist.x64.exe"
#define UnInstallDir "{app}\"
#define UnInstallFile "unins000.exe"
#define ZHDisclaimerAsserts "resource\免责声明.rtf"
#define ENDisclaimerAsserts "resource\Disclaimation notice.rtf"

[Setup]
    ; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
    ; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
    AppId={{665A94DA-89A5-4718-8D4E-3FE3E19272D6}
    AppName={#MyAppName}
    AppVersion={#MyAppVersion}
    AppVerName={#MyAppName} {#MyAppVersion}
    VersionInfoProductName={#MyAppName} {#MyAppVersion}
    AppPublisher={#MyAppPublisher}
    AppPublisherURL={#MyAppURL}
    AppSupportURL={#MyAppURL}
    AppUpdatesURL={#MyAppURL} 


    AppCopyright=Copyright (C) 1997-2005 My Company, Inc.
    DisableProgramGroupPage=yes
    ; 关闭欢迎页
    DisableWelcomePage=no
    ;关闭finsish页
    DisableFinishedPage=no

    OutputDir={#OutputDir}
    OutputBaseFilename={#MyAppName}_V{#MyAppVersion}_setup
    SetupIconFile={#PicturePath}\AprogExe.ico
    ;Compression=lzma
    LanguageDetectionMethod=uilanguage
    ShowLanguageDialog=yes
    SolidCompression=yes
    WizardStyle=modern

    WizardSmallImageFile = {#PicturePath}\acroview_Installer_new.bmp 
    DisableDirPage =no
    DefaultDirName= {#DefaultInstallDir}
    InfoBeforeFile={#ENDisclaimerAsserts}
    
[Languages]
    Name: "english"; MessagesFile: "compiler:Default.isl" ;InfoBeforeFile:"{#ENDisclaimerAsserts}"
    Name: "chinesesimplified"; MessagesFile: "compiler:Languages\ChineseSimplified.isl" ;InfoBeforeFile:"{#ZHDisclaimerAsserts}"
  
[Tasks]
    Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: checkablealone 

[Files]
    ;加载文件
    Source: "{#PicturePath}\*.bmp"; DestDir: {tmp}; Flags: dontcopy solidbreak ; Attribs: hidden system
    Source: "{#SourceFolder}\Aprog.exe"; DestDir: "{app}\{#MyAppName}"; Flags: ignoreversion ;
    Source: "{#SourceFolder}\*"; DestDir: "{app}\{#MyAppName}"; Flags: ignoreversion recursesubdirs createallsubdirs ;

[Components]
    ;选择安装组件

[Icons]
    ;创建快捷方式
    Name: "{autoprograms}\{#MyAppName}_V{#MyAppVersion}"; Filename: "{app}\{#MyAppName}\{#MyAppExeName}";WorkingDir:{app}
    Name: "{autodesktop}\{#MyAppName}_V{#MyAppVersion}"; Filename: "{app}\{#MyAppName}\{#MyAppExeName}"; Tasks: desktopicon ;WorkingDir:{app}
    ;Name: "{autodesktop}\{#MultiAppName}_V{#MultiAppVersion}"; Filename: "{app}\{#MultiAppName}\{#MultiAppName}"; Tasks: desktopicon ;WorkingDir:{app}
    ;Name: "{autoprograms}\{#MultiAppName}_V{#MultiAppVersion}"; Filename: "{app}\{#MultiAppName}\{#MultiAppExeName}" ;WorkingDir:{app}
[InstallDelete]
;安装时，删除之前创建的快捷方式
;Type: files; Name:"{autodesktop}\{#MyAppName}_V*.lnk";
;Type: files; Name:"{autodesktop}\{#MultiAppName}_V*.lnk";
[CustomMessages]
  english.CheckUninstall=Detected that the program has been installed, it is necessary to uninstall the previous version first.
  chinesesimplified.CheckUninstall=监测到程序已经安装，需要先卸载之前版本.
  english.ManuallyUnloaded=Unable to find the uninstallation path, please manually uninstall.
  chinesesimplified.ManuallyUnloaded=卸载路径搜索不到，请手动卸载.
  english.CheckCapacity=The current drive letter size is smaller than the available program size, and installation cannot continue.
  chinesesimplified.CheckCapacity=当前盘符大小小于可用程序大小，安装无法继续.

[dirs]
    ;选择安装组件
    ;Name:"{#MultiAppName}";Components:multiapp
    ;Name:"{#MyAppName}";Components:myapp
;[Registry]
    ;Root: HKLM; Subkey: "Software\Acroview\{#MyAppName}"; ValueType: string; ValueName: "AppId"; ValueData: "F1D47573-D438-4FD6-85DD-FDD6E5AE3698"; Flags: uninsdeletekey
    ;Root: HKLM; Subkey: "Software\Acroview\{#MyAppName}"; ValueType: string; ValueName: "UnInstallDir"; ValueData: "{#UnInstallDir}"; Flags: uninsdeletekey
[Run]
    ;安装完后运行的程序
    Filename: "{app}\{#MyAppName}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent 
[code]
    var
       Bmp1: TBitmapImage;
       Bmp2: TBitmapImage;
       //定义全局变量，卸载文件名称
       UninstallFilePath: string;
       LanguageID: string;

    //比较字符串
    function StringsAreEqual(str1, str2: string): Boolean;
    begin
      Result := CompareStr(str1, str2) = 0;
    end;

    //判断程序是否安装过
    function IsProgramInstalled: Boolean;
    var
      uicmd: string;
      ResultCode: Integer; 
      SelectedPath: string;
    begin
      Result := False;
      // 检查程序是否已经安装
      if RegQueryStringValue(HKLM64, 'SOFTWARE\WOW6432Node\Acroview\Aprog', 'AppId', uicmd) then
      begin
        if StringsAreEqual(uicmd, 'F1D47573-D438-4FD6-85DD-FDD6E5AE3698') then
          if MsgBox(CustomMessage('CheckUninstall'), mbError, MB_YESNO) = IDYES then
          begin
             if RegQueryStringValue(HKLM64, 'SOFTWARE\WOW6432Node\Acroview\Aprog', 'UnInstallDir', SelectedPath) then
             begin
              Exec(SelectedPath + ExpandConstant('{#UnInstallFile}'), '', '', SW_SHOWNORMAL, ewWaitUntilTerminated, ResultCode);
              Result := True; // 停止继续安装
             end
             else
             begin
             MsgBox(CustomMessage('ManuallyUnloaded'), mbError, MB_OK);
             Result := True; // 停止继续安装
             end;
          end
          else
          begin
             Result := True; // 停止继续安装
          end;
      end;
    end;

    //点击下一步进行判断
    function NextButtonClick(CurPageID: Integer): Boolean;
    var freeDiskSpace, totalDiskSpace : Cardinal;
        strInt : Integer;
        useSpace : Integer;
        diskStr : String;
        NumberStr: String;
        CharIndex: Integer;
        strChar: Char;
    begin
      Result := True;
      if CurPageID = wpSelectDir then
      begin
        diskStr := WizardForm.DiskSpaceLabel.Caption;

        for CharIndex := 1 to Length(diskStr) do
        begin
          //strChar := Copy(diskStr, CharIndex, 1);
          strChar := diskStr[CharIndex];
          if (strChar >= '0') and (strChar <= '9') then
          begin
            NumberStr := NumberStr + strChar;
          end;
          if StringsAreEqual(strChar, '.') then
          begin
            NumberStr := NumberStr + strChar;
          end;
        end;

        NumberStr := Copy(NumberStr, 1, Pos('.', NumberStr) - 1);
        NumberStr := Trim(NumberStr);
        if NumberStr <> '' then
        begin
          //将字符串转换为整数
          strInt := StrToInt(NumberStr);
          GetSpaceOnDisk(Copy(WizardForm.DirEdit.text, 1, 2), true, freeDiskSpace, totalDiskSpace);

          if strInt > freeDiskSpace then
          begin
            MsgBox(CustomMessage('CheckCapacity'), mbError, MB_OK);
            Result := False;
          end;
        end;
      end;
    end;


    //在安装目录下查找卸载文件，格式为：unins*.exe
    procedure get_uninstall_file(Path: string);
      var
        FindRec: TFindRec;         
      begin
        UninstallFilePath := '';
        if FindFirst(Path + '\unins*.exe', FindRec) then
        begin
          try
            repeat
              if (FindRec.Name <> '.') and (FindRec.Name <> '..') then
              begin
                UninstallFilePath := Path + '\' + FindRec.Name;

              end;  // end of if (FindRec.Name <> '.') 
            until not FindNext(FindRec);
          finally
            FindClose(FindRec);
            Log(Format('File==>2 %s', [UninstallFilePath]));
          end;  // end of try 
        end  // end of  if FindFirst
          else
        begin
          Log(Format('Failed to list %s', [Path]));
        end;  // end of else
      end; //end of get_uninstall_file
    //初始化图片
    procedure InitializeWizard();
      begin
        //修改小图标座标
        WizardForm.Caption :=  'Setup - {#MyAppName}   {#MyAppURL}' ;
        WizardForm.WizardSmallBitmapImage.width := 110;
        Wizardform.WizardSmallBitmapImage.left := WizardForm.width - 110 - 30;
        Wizardform.PageNameLabel.width := 495 - 110 - 36;        
        Wizardform.PageDescriptionLabel.width := 495 - 110 - 60;
        //加载图片到TMP目录
        ExtractTemporaryFile('ap8000_ag01_null.bmp');
        ExtractTemporaryFile('ap8000_ag01.bmp');
        ExtractTemporaryFile('ap8000_ag02_null.bmp');
        ExtractTemporaryFile('ap8000_ag02.bmp');
        ExtractTemporaryFile('auto1.bmp');
        ExtractTemporaryFile('auto2.bmp');
        ExtractTemporaryFile('ap8000_1_1.bmp');
        ExtractTemporaryFile('ap8000_1_1_I.bmp');
        ExtractTemporaryFile('ap8000_1_1_online.bmp');
        ExtractTemporaryFile('auto3.bmp');
        ExtractTemporaryFile('ap8000_1_8.bmp');
        ExtractTemporaryFile('ap8000_1_8_online.bmp');
      end; // end of InitializeWizard
    //处理页面图片显示
    procedure CurPageChanged(CurPageID: Integer);
         
      var
        ResultCode: Integer;
        uicmd     : String;
        strLanguage  : String;
      begin
          if CurPageID = wpWelcome then
          //欢迎页面图片处理
          begin 
              Wizardform.WelcomeLabel1.top := ScaleY(5);
              Wizardform.WelcomeLabel1.Left := ScaleX(5);
              Wizardform.WelcomeLabel1.Height := ScaleY(30);
              Wizardform.WelcomeLabel2.top := ScaleY(40);
              Wizardform.WelcomeLabel2.Left := ScaleX(20); 
              Wizardform.WelcomeLabel2.Height := ScaleY(40);
              Wizardform.WizardBitmapImage.Visible := False;

              Bmp1:= TBitmapImage.Create(Wizardform);
              Bmp1.Top:=ScaleY(100);
              Bmp1.Left:=ScaleX(30);
              Bmp1.Width:= ScaleX(200);
              Bmp1.Height:=ScaleY(200);
              Bmp1.Parent:=Wizardform.WelcomePage;
              Bmp1.Stretch :=True;
              Bmp1.Bitmap.LoadFromFile(ExpandConstant('{tmp}\ap8000_ag01_null.bmp'));  

              Bmp2:= TBitmapImage.Create(Wizardform);
              Bmp2.Top:=ScaleY(70);
              Bmp2.Left:=ScaleX(260);
              Bmp2.Width:= ScaleX(260);
              Bmp2.Height:=ScaleY(300);
              Bmp2.Parent:=Wizardform.WelcomePage;
              Bmp2.Stretch :=True;                                                         
              Bmp2.Bitmap.LoadFromFile(ExpandConstant('{tmp}\auto1.bmp'));
          end;


          if CurPageID = wpInstalling then
          //正在安装页面图片处理
          begin
             //获取卸载文件，如果找到则调用卸载文件卸载
              get_uninstall_file(ExpandConstant('{app}'))
              if  (''<>UninstallFilePath)  then
                   Exec(UninstallFilePath, ' /VERYSILENT', '', SW_SHOWNORMAL,
                    ewWaitUntilTerminated, ResultCode) 
          end;

          if CurPageID = wpFinished then
          begin
            strLanguage := ActiveLanguage();
            SetIniString('Version', 'BuildVer', '{#MyAppVersion}', ExpandConstant(WizardForm.DirEdit.Text + '\Aprog\Localcfg.ini'));
            if StringsAreEqual('english', strLanguage) then
              begin
                SetIniString('Language', 'mode', '1', ExpandConstant(WizardForm.DirEdit.Text + '\Aprog\Localcfg.ini')); 
              end;
            if StringsAreEqual('chinesesimplified', strLanguage) then
              begin
                SetIniString('Language', 'mode', '2', ExpandConstant(WizardForm.DirEdit.Text + '\Aprog\Localcfg.ini')); 
              end;
            //进入安装页面时判断是否安装VC 2015版本之上的运行库，如果没有安装则安装
            if IsWin64() then
            begin
              if not RegQueryStringValue(HKLM64, 'SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\{8bdfe669-9705-4184-9368-db9ce581e0e7}', 'UninstallString', uicmd) then
              begin                             
                  if MsgBox('Please install Visual C++ Redistributable for Visual Studio 2015-2022 first!', mbConfirmation, MB_YESNO) = IDYES then
                  begin
                      if not Exec(ExpandConstant('{app}\{#MyAppName}\{#VCDir}\{#VCinstallfile_x86}'), '', '', SW_SHOWNORMAL,
                    ewWaitUntilTerminated, ResultCode)
                    then
                      MsgBox('Visual C++ Redistributable for Visual Studio 2015-2022 installer failed to run!' + #13#10 +
                        SysErrorMessage(ResultCode), mbError, MB_OK);
                  end
                  else // if MsgBox(
                  begin
                      MsgBox('Cancel install,AG06Client should not run!' + #13#10 +
                        SysErrorMessage(ResultCode), mbError, MB_OK);
                  end;
              end; // if not RegQueryStringValue
            end
            else  // if Is_64
            begin  
              if not RegQueryStringValue(HKLM32, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{46c3b171-c15c-4137-8e1d-67eeb2985b44}', 'UninstallString', uicmd) then
              begin                               
                  if MsgBox('Please install Visual C++ Redistributable for Visual Studio 2015-2022 first!', mbConfirmation, MB_YESNO) = IDYES then
                  begin
                      if not Exec(ExpandConstant('{app}\{#MyAppName}\{#VCDir}\{#VCinstallfile_x64}'), '', '', SW_SHOWNORMAL,
                    ewWaitUntilTerminated, ResultCode)
                    then
                      MsgBox('Visual C++ Redistributable for Visual Studio 2015-2022 installer failed to run!' + #13#10 +
                        SysErrorMessage(ResultCode), mbError, MB_OK);
                  end
                  else
                  begin
                      MsgBox('Cancel install,AG06Client should not run!' + #13#10 +
                        SysErrorMessage(ResultCode), mbError, MB_OK);
                  end;
              end;
            end; //end if Is_64
        end; //end if CurPageID = wpFinished then
     end; //end of CurPageChanged